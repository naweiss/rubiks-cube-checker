name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Lint with Ruff
        run: |
          ruff --format=github .
  type_check:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "mypy>=0.750" mypy2junit .[test]
      - name: Type check with Mypy
        run: |
          mypy . | mypy2junit --tee --output mypy-results.xml
      - name: Upload mypy results
        uses: mikepenz/action-junit-report@v3
        with:
          detailed_summary: true
          check_name: Mypy type checks
          report_paths: mypy-results.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
  test:
    runs-on: ${{ matrix.os }}
    permissions:
      checks: write
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest
        run: |
          pytest --junitxml=test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: mikepenz/action-junit-report@v3
        with:
          detailed_summary: true
          check_name: ${{ matrix.os }} tests - Python ${{ matrix.python-version }}
          report_paths: test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build
